# Pipelines
# ~~~~
hostPipelineConfiguration="config/hostPipeline.conf"
clusterPipelineConfiguration="config/clusterPipeline.conf"

# Http Server
# ~~~~
#httpHost="0.0.0.0"
#httpPort=7066
#httpHealthCheckPath="/ping"
#httpStatusPath="/status"
#httpVersionPath="/version"

# Metrics
# ~~~~
monitoringCluster="cluster_aggregator"
#monitoringService="cluster_aggregator"
#monitoringSinks=[
#  {
#    class = "com.arpnetworking.metrics.impl.ApacheHttpSink"
#    bufferSize = 10000
#    uri = "http://localhost:7090/metrics/v3/application"
#    parallelism = 2
#    maxBatchSize = 500
#    emptyQueueInterval = "PT0.5S"
#    eventsDroppedLoggingInterval = "PT1M"
#    dispatchErrorLoggingInterval = "PT1M"
#    unsupportedDataLoggingInterval = "PT1M"
#  }
#]
#jvmMetricsCollectionInterval="PT1.0S"
#clusterStatusInterval="PT10.0S"

# NOTES:
# - monitoringHost and monitoringPort are deprecated
# - specifying monitoringHost or monitoringPort disables monitoringSinks
# - for backwards compatibility the legacy fields monitoringHost and monitoringPort
#   take precedence over monitoringSinks
# - migrate to monitoringSinks as soon as possible

# Logging
# ~~~~
logDirectory="logs"

# Aggregation
# ~~~~
aggregationHost="0.0.0.0"
aggregationPort=7065
maxConnectionTimeout="PT2M"
minConnectionTimeout="PT1M"
clusterHostSuffix=".cluster"
reaggregationDimensions=["host"]
#reaggregationInjectClusterAsHost=True
#reaggregationTimeout="PT1M"

# Pekko
# ~~~~
rebalanceConfiguration {
  maxParallel=100
  threshold=500
}
pekkoConfiguration {
  pekko {
    loggers=["org.apache.pekko.event.slf4j.Slf4jLogger"]
    loglevel="DEBUG"
    stdout-loglevel="DEBUG"
    logging-filter="org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
    actor {
      provider="cluster"
      serializers {
        proto="pekko.remote.serialization.ProtobufSerializer"
      }
      serialization-bindings {
        "com.arpnetworking.metrics.aggregation.protocol.Messages$StatisticSetRecord"="proto"
      }
      debug {
        unhandled="on"
      }
    }
    cluster {
      seed-nodes=["pekko://Metrics@127.0.0.1:2551"]
      downing-provider-class = "pekko.cluster.sbr.SplitBrainResolverProvider"
      sharding {
        state-store-mode="persistence"
        passivate-idle-entity-after="300s"
      }
    }
    remote {
      log-remote-lifecycle-events="on"
      artery {
        enabled="on"
        canonical.port=2551
        canonical.hostname="127.0.0.1"
      }
    }
    persistence {
      journal {
        plugin = "pekko.persistence.journal.leveldb"
        leveldb.dir = "/opt/cluster-aggregator/data/journal"
      }
      snapshot-store {
        plugin = "pekko.persistence.snapshot-store.local"
        local.dir = "/opt/cluster-aggregator/data/snapshots"
      }
    }
  }
}
